// Inserting data in mongodb
CREATE


use HarryKart

using the below command we can insert a single collection of data

db.items.insertOne({name : "Harry, age : 22, salary : 22000, marks : 56})


using the command below we can insert more than one collection of data , No need to maintain a fixed schema , data of different schema can be inserted.


db.items.insertMany([{name : "samsung",price : 25000, rating : 4.5},{name : "redmi",price : 20000, rating : 4.3},{name : "realme",price : 21000, rating : 4.4, isBig : true}])

READ


using the command below we we can find the collections whose rating is exactly equal to 4.5

db.items.find({rating : 4.5})

The below command is used to find collections whose any of the key parameter is greater or equal to the given value

db.items.find({rating : {$gte: 4}})


The below command is used to find collections whose any of the key parameter is strictly greater to the given value

db.items.find({rating : {$gt: 4}})

The below command is used to find collections whose any of the key parameter is strictly lesser to the given value

db.items.find({rating : {$lt: 4}})


And operator

db.items.find({rating : {$gt: 4}, price : {$gt: 4000}})

or operator

db.items.find({$or: [{rating : {$gt: 4},price : {$gt: 4000}}]})

The below command will show only one key value of each collections

db.items.find({rating : {$gt: 4}},{rating: 1})


DELETE


below command will delete first matching element

db.items.deleteOne({price: 20000})


below command will delete all matching element

db.items.deleteMany({price: 20000})


UPDATE


Below command will insert a new collections
db.anotherCollection.insertOne({a : 89})

Below command will update first matching element
db.items.updateOne({name: "samsung"},{$set: {price: 2}})

Below command will update all matching element
db.items.updateMany({name: "samsung"},{$set: {price: 2}})